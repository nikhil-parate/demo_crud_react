{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil.parate\\\\Desktop\\\\guvi\\\\react\\\\demosite\\\\src\\\\form.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nclass demo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => this.getPost();\n\n    this.getPost = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(API_URL); //console.log(data);\n\n        this.setState({\n          posts: data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handle = async event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }); //console.log(this.state)\n    };\n\n    this.update = async event => {\n      //console.log(UserId,Title,Body);\n      event.preventDefault();\n      const {\n        UserId,\n        Title,\n        Body\n      } = [event.target.value];\n      const post = {\n        userId: UserId,\n        title: Title,\n        body: Body\n      };\n      console.log(\"inside update\");\n      console.log(event.target.value);\n\n      try {\n        await axios.put(`${API_URL}/${this.state.userId}`, post); //const {data} = await axios.get(API_URL);\n        //console.log(data);\n\n        let posts = [...this.state.posts, post]; //console.log(posts);\n\n        this.setState({\n          posts\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.comments = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}/comments`);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"postId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map(({\n              postId,\n              id,\n              name,\n              email,\n              body\n            }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: postId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    };\n\n    this.view = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}`);\n      console.log(data);\n      alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\n    };\n\n    this.delete = async postId => {\n      try {\n        await axios.delete(`${API_URL}/${postId}`);\n        let posts = [...this.state.posts];\n        posts = posts.filter(({\n          id\n        }) => id !== postId);\n        this.setState({\n          posts\n        }); // console.log(posts);\n        // console.log(postId)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      posts: [],\n      userId: \"\",\n      title: \"\",\n      body: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.update,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"userId\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: this.state.userId.value,\n            name: \"userId\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.title.value,\n            name: \"title\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Body\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.body.value,\n            name: \"body\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"userId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.posts.map(({\n            userId,\n            id,\n            title,\n            body\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: userId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.delete(id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.view(id),\n                  children: \"View User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.comments(id),\n                  children: \"View Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default demo;","map":{"version":3,"sources":["C:/Users/nikhil.parate/Desktop/guvi/react/demosite/src/form.js"],"names":["React","Component","axios","API_URL","demo","constructor","componentDidMount","getPost","data","get","setState","posts","err","console","log","handle","event","target","name","value","update","preventDefault","UserId","Title","Body","post","userId","title","body","put","state","comments","Id","map","postId","id","email","view","alert","delete","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,4CAAhB;;AACA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACzBI,EAAAA,WAAW,GAAG;AACd;;AADc,SASdC,iBATc,GASM,MAAM,KAAKC,OAAL,EATZ;;AAAA,SAUdA,OAVc,GAUJ,YAAU;AAChB,UAAG;AACC,cAAM;AAACC,UAAAA;AAAD,YAAS,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAArB,CADD,CAEC;;AACA,aAAKO,QAAL,CAAc;AAACC,UAAAA,KAAK,EAACH;AAAP,SAAd;AACH,OAJD,CAKA,OAAMI,GAAN,EAAU;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAnBa;;AAAA,SAoBdG,MApBc,GAoBL,MAAOC,KAAP,IAAiB;AACxB,WAAKN,QAAL,CAAc;AAAC,SAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAoBF,KAAK,CAACC,MAAN,CAAaE;AAAlC,OAAd,EADwB,CAExB;AAED,KAxBa;;AAAA,SAyBdC,MAzBc,GAyBL,MAAOJ,KAAP,IAAiB;AACtB;AACAA,MAAAA,KAAK,CAACK,cAAN;AACA,YAAM;AAACC,QAAAA,MAAD;AAAQC,QAAAA,KAAR;AAAcC,QAAAA;AAAd,UAAsB,CAACR,KAAK,CAACC,MAAN,CAAaE,KAAd,CAA5B;AACA,YAAMM,IAAI,GAAG;AACTC,QAAAA,MAAM,EAAEJ,MADC;AAETK,QAAAA,KAAK,EAAGJ,KAFC;AAGTK,QAAAA,IAAI,EAAGJ;AAHE,OAAb;AAKAX,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaE,KAAzB;;AACA,UAAG;AACE,cAAMjB,KAAK,CAAC2B,GAAN,CAAW,GAAE1B,OAAQ,IAAG,KAAK2B,KAAL,CAAWJ,MAAO,EAA1C,EAA4CD,IAA5C,CAAN,CADF,CAEE;AACA;;AACA,YAAId,KAAK,GAAG,CAAC,GAAG,KAAKmB,KAAL,CAAWnB,KAAf,EAAsBc,IAAtB,CAAZ,CAJF,CAKE;;AACA,aAAKf,QAAL,CAAc;AAACC,UAAAA;AAAD,SAAd;AACA,OAPL,CAQI,OAAMC,GAAN,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACR,KA/Ca;;AAAA,SAgDdmB,QAhDc,GAgDJ,MAAOC,EAAP,IAAc;AACpB,YAAM;AAACxB,QAAAA;AAAD,UAAS,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,OAAQ,IAAG6B,EAAG,WAA3B,CAArB;AACA,0BACI;AAAA,+BACA;AAAA,kCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,sBAEAxB,IAAI,CAACyB,GAAL,CAAS,CAAC;AAACC,cAAAA,MAAD;AAAQC,cAAAA,EAAR;AAAWjB,cAAAA,IAAX;AAAgBkB,cAAAA,KAAhB;AAAsBR,cAAAA;AAAtB,aAAD,kBACT;AAAA,sCACE;AAAA,0BAAKM;AAAL;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,0BAAKjB;AAAL;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,0BAAKkB;AAAL;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA,0BAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA,eAAWO,EAAX;AAAA;AAAA;AAAA;AAAA,oBADA;AAFA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,uBADJ;AA2BH,KA7Ea;;AAAA,SA8EdE,IA9Ec,GA8EP,MAAOL,EAAP,IAAc;AACnB,YAAM;AAACxB,QAAAA;AAAD,UAAS,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,OAAQ,IAAG6B,EAAG,EAA3B,CAArB;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA8B,MAAAA,KAAK,CAAC,cAAc9B,IAAI,CAAC2B,EAAnB,GAAwB,KAAxB,GAAgC,UAAhC,GAA6C3B,IAAI,CAACmB,KAAlD,GAA0D,KAA1D,GAAkE,SAAlE,GAA8EnB,IAAI,CAACoB,IAApF,CAAL;AACD,KAlFa;;AAAA,SAmFdW,MAnFc,GAmFL,MAAML,MAAN,IAAiB;AACtB,UAAI;AACH,cAAMhC,KAAK,CAACqC,MAAN,CAAc,GAAEpC,OAAQ,IAAG+B,MAAO,EAAlC,CAAN;AACD,YAAIvB,KAAK,GAAG,CAAC,GAAG,KAAKmB,KAAL,CAAWnB,KAAf,CAAZ;AACAA,QAAAA,KAAK,GAAIA,KAAK,CAAC6B,MAAN,CAAa,CAAC;AAACL,UAAAA;AAAD,SAAD,KAAUA,EAAE,KAAKD,MAA9B,CAAT;AACA,aAAKxB,QAAL,CAAc;AAACC,UAAAA;AAAD,SAAd,EAJI,CAKL;AACA;AACE,OAPD,CAQA,OAAMC,GAAN,EAAW;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KA/Fa;;AAEd,SAAKkB,KAAL,GAAa;AACTnB,MAAAA,KAAK,EAAG,EADC;AAETe,MAAAA,MAAM,EAAG,EAFA;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMC;;AAwFDa,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACA;AAAM,QAAA,QAAQ,EAAE,KAAKrB,MAArB;AAAA,gCACI;AAAA,4CACA;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAE,KAAKU,KAAL,CAAWJ,MAAX,CAAkBP,KAA9C;AAAqD,YAAA,IAAI,EAAC,QAA1D;AAAmE,YAAA,QAAQ,EAAE,KAAKJ;AAAlF;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,2CACA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAE,KAAKe,KAAL,CAAWH,KAAX,CAAiBR,KAA3C;AAAkD,YAAA,IAAI,EAAC,OAAvD;AAA+D,YAAA,QAAQ,EAAE,KAAKJ;AAA9E;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAA,0CACA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAE,KAAKe,KAAL,CAAWF,IAAX,CAAgBT,KAA1C;AAAiD,YAAA,IAAI,EAAC,MAAtD;AAA6D,YAAA,QAAQ,EAAE,KAAKJ;AAA5E;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAaA;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,oBACK,KAAKe,KAAL,CAAWnB,KAAX,CAAiBsB,GAAjB,CAAqB,CAAC;AAACP,YAAAA,MAAD;AAASS,YAAAA,EAAT;AAAaR,YAAAA,KAAb;AAAoBC,YAAAA;AAApB,WAAD,KAA8B;AACpD,gCACA;AAAA,sCACI;AAAA,0BAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKS;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,uCAAI;AAAQ,kBAAA,OAAO,EAAE,MAAI,KAAKW,MAAL,CAAYJ,EAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,uCAAI;AAAQ,kBAAA,OAAO,EAAE,MAAI,KAAKE,IAAL,CAAUF,EAAV,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA,uCAAI;AAAQ,kBAAA,OAAO,EAAE,MAAI,KAAKJ,QAAL,CAAcI,EAAd,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA,eAASA,EAAT;AAAA;AAAA;AAAA;AAAA,oBADA;AAWf,WAZgB;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA,oBADJ;AAyCH;;AA3IwB;;AA6I7B,eAAe/B,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\nclass demo extends Component {\r\n    constructor() {\r\n    super();\r\n    this.state = {\r\n        posts : [],\r\n        userId : \"\",\r\n        title: \"\",\r\n        body: \"\",\r\n    }\r\n    }\r\n    componentDidMount = () => this.getPost();\r\n    getPost = async() =>{\r\n        try{\r\n            const {data} = await axios.get(API_URL);\r\n            //console.log(data);\r\n            this.setState({posts:data});\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    handle = async (event) => {\r\n      this.setState({[event.target.name]:event.target.value})\r\n      //console.log(this.state)\r\n     \r\n    }\r\n    update = async (event) => {\r\n        //console.log(UserId,Title,Body);\r\n        event.preventDefault();\r\n        const {UserId,Title,Body} = [event.target.value]\r\n        const post = {\r\n            userId: UserId,\r\n            title:  Title ,\r\n            body:  Body ,\r\n        }\r\n        console.log(\"inside update\")\r\n        console.log(event.target.value)\r\n        try{\r\n             await axios.put(`${API_URL}/${this.state.userId}`,post)  \r\n             //const {data} = await axios.get(API_URL);\r\n             //console.log(data);\r\n             let posts = [...this.state.posts, post];\r\n             //console.log(posts);\r\n             this.setState({posts});\r\n            }\r\n            catch(err){\r\n              console.log(err);\r\n            }\r\n    }\r\n    comments= async (Id) => { \r\n        const {data} = await axios.get(`${API_URL}/${Id}/comments`)\r\n        return(\r\n            <>\r\n            <table>\r\n                <thead>\r\n                    <th>postId</th>\r\n                    <th>id</th>\r\n                    <th>name</th>\r\n                    <th>email</th>\r\n                    <th>body</th>\r\n                </thead>\r\n                <tbody>\r\n            {\r\n                data.map(({postId,id,name,email,body})=>\r\n                <tr key = {id}>\r\n                  <td>{postId}</td>\r\n                  <td>{id}</td>\r\n                  <td>{name}</td>\r\n                  <td>{email}</td>\r\n                  <td>{body}</td> \r\n                  </tr>\r\n                )\r\n            }\r\n            </tbody>\r\n            </table>\r\n            </>\r\n        )\r\n        \r\n    }\r\n    view = async (Id) => {\r\n      const {data} = await axios.get(`${API_URL}/${Id}`)  ;\r\n      console.log(data);\r\n      alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);    \r\n    }\r\n    delete = async(postId) => {\r\n        try {\r\n         await axios.delete(`${API_URL}/${postId}`);\r\n        let posts = [...this.state.posts];\r\n        posts =  posts.filter(({id}) => id !== postId); \r\n        this.setState({posts});\r\n       // console.log(posts);\r\n       // console.log(postId)\r\n        }\r\n        catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <form onSubmit={this.update}>\r\n                <label>userId\r\n                <input type=\"number\" value={this.state.userId.value} name=\"userId\" onChange={this.handle} />\r\n                </label>\r\n                <label>Title\r\n                <input type=\"text\" value={this.state.title.value} name=\"title\" onChange={this.handle} />\r\n                </label>\r\n                <label>Body\r\n                <input type=\"text\" value={this.state.body.value} name=\"body\" onChange={this.handle} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <table>\r\n                <thead>\r\n                    <th>userId</th>\r\n                    <th>Id</th>\r\n                    <th>Title</th>\r\n                    <th>Body</th>\r\n                    <th>Action</th>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.posts.map(({userId, id, title, body})=> {\r\n                    return(\r\n                    <tr key={id}>\r\n                        <td>{userId}</td>\r\n                        <td>{id}</td>\r\n                        <td>{title}</td>\r\n                        <td>{body}</td>\r\n                        <td><button onClick={()=>this.delete(id)}>Delete</button></td>\r\n                        <td><button onClick={()=>this.view(id)}>View User</button></td>\r\n                        <td><button onClick={()=>this.comments(id)}>View Comments</button></td>\r\n                    </tr>    \r\n                    );\r\n    })\r\n    }\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        ) \r\n    }\r\n}\r\nexport default demo;"]},"metadata":{},"sourceType":"module"}