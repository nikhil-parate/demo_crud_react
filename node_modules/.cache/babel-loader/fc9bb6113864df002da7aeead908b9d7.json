{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil.parate\\\\desktop\\\\guvi\\\\react\\\\demosite\\\\src\\\\form.js\";\nimport React, { Component } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nclass demo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => this.getPost();\n\n    this.getPost = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(API_URL); //console.log(data);\n\n        this.setState({\n          posts: data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handle = async ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      const errors = this.state.errors;\n\n      switch (name) {\n        case \"userId\":\n          {\n            if (!value) {\n              errors[name] = \"userId is empty\";\n            } else if (isNaN(name)) {\n              errors[name] = \"userId must be Number\";\n            } else {\n              errors[name] = \"\";\n            }\n\n            break;\n          }\n\n        case \"title\":\n          {\n            if (!value) {\n              errors[name] = \"title is empty\";\n            } else {\n              errors[name] = \"\";\n            }\n\n            break;\n          }\n\n        case \"body\":\n          {\n            if (!value) {\n              errors[name] = \"body is empty\";\n            } else {\n              errors[name] = \"\";\n            }\n\n            break;\n          }\n      }\n\n      this.setState({\n        [name]: value,\n        errors\n      }); //console.log(this.state)\n    };\n\n    this.handleBlur = ({\n      target: {\n        name\n      }\n    }) => {\n      const touched = { ...this.state.touched\n      };\n      touched[name] = true;\n      this.setState({\n        touched\n      });\n    };\n\n    this.submit = async event => {\n      console.log(event.target);\n      event.preventDefault();\n      var flag = 0,\n          ID,\n          index;\n\n      for (var i = 0; i < this.state.posts.length; ++i) {\n        if (this.state.posts[i].id == this.myRef1.current.value) {\n          flag = 1;\n          ID = this.state.posts[i].id;\n          index = i;\n          break;\n        }\n      }\n\n      if (flag === 0) {\n        const post = {\n          userId: this.myRef1.current.value,\n          title: this.myRef2.current.value,\n          body: this.myRef3.current.value\n        };\n        console.log(\"if\");\n\n        try {\n          await axios.post(`${API_URL}`, post);\n          let posts = [...this.state.posts, post];\n          console.log(\"try\");\n          this.setState({\n            posts\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        console.log(\"else\");\n        const post = {\n          userId: this.myRef1.current.value,\n          title: this.myRef2.current.value,\n          body: this.myRef3.current.value\n        };\n        console.log(\"inside update\");\n\n        try {\n          await axios.put(`${API_URL}/${ID}`, post); //console.log(posts);\n\n          this.state.posts[index].userId = post.userId;\n          this.state.posts[index].title = post.title;\n          this.state.posts[index].body = post.body;\n          const posts = [...this.state.posts];\n          this.setState({\n            posts\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.comments = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}/comments`);\n      let res = [];\n\n      for (var i = 0; i < data.length; ++i) {\n        res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\n      }\n\n      alert(res);\n    };\n\n    this.view = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}`);\n      console.log(data);\n      alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\n    };\n\n    this.delete = async postId => {\n      try {\n        await axios.delete(`${API_URL}/${postId}`);\n        let posts = [...this.state.posts];\n        posts = posts.filter(({\n          id\n        }) => id !== postId);\n        this.setState({\n          posts\n        }); // console.log(posts);\n        // console.log(postId)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.update = async (id, title, body) => {\n      this.myRef1.current.value = id;\n      this.myRef2.current.value = title;\n      this.myRef3.current.value = body;\n    };\n\n    this.myRef1 = /*#__PURE__*/React.createRef();\n    this.myRef2 = /*#__PURE__*/React.createRef();\n    this.myRef3 = /*#__PURE__*/React.createRef();\n    this.state = {\n      posts: [],\n      userId: \"\",\n      title: \"\",\n      body: \"\",\n      errors: {\n        userId: \"\",\n        title: \"\",\n        body: \"\"\n      },\n      touched: {\n        userId: false,\n        title: false,\n        body: false\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" userId \", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.myRef1,\n            type: \"number\",\n            required: true,\n            value: this.state.userId.value,\n            name: \"userId\",\n            onChange: this.handle,\n            onBlur: this.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 28\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Title \", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.myRef2,\n            type: \"text\",\n            required: true,\n            value: this.state.title.value,\n            name: \"title\",\n            onChange: this.handle,\n            onBlur: this.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 27\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Body \", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.myRef3,\n            type: \"text\",\n            required: true,\n            value: this.state.body.value,\n            name: \"body\",\n            onChange: this.handle,\n            onBlur: this.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 26\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" userId \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Id \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 32\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 28\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Body \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 31\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Action \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", this.state.posts.map(({\n            userId,\n            id,\n            title,\n            body\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                background: \"#778899\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  background: \"white\"\n                },\n                children: [\" \", userId, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", body, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    background: \"#ff6347\"\n                  },\n                  onClick: () => this.delete(id),\n                  children: \" Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    background: \"#7fffd4\"\n                  },\n                  onClick: () => this.view(id),\n                  children: \" View User \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    background: \"#7fffd4\"\n                  },\n                  onClick: () => this.comments(id),\n                  children: \" View Comments \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    background: \"#77dd77\"\n                  },\n                  onClick: () => this.update(id, title, body),\n                  children: \" Update \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 30\n            }, this);\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default demo;","map":{"version":3,"sources":["C:/Users/nikhil.parate/desktop/guvi/react/demosite/src/form.js"],"names":["React","Component","Button","Table","axios","API_URL","demo","constructor","componentDidMount","getPost","data","get","setState","posts","err","console","log","handle","target","name","value","errors","state","isNaN","handleBlur","touched","submit","event","preventDefault","flag","ID","index","i","length","id","myRef1","current","post","userId","title","myRef2","body","myRef3","put","comments","Id","res","push","postId","email","alert","view","delete","filter","update","createRef","render","map","background"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\nclass demo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.myRef1 = React.createRef();\r\n        this.myRef2 = React.createRef();\r\n        this.myRef3 = React.createRef();\r\n        this.state = {\r\n            posts: [],\r\n            userId: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n            errors: {\r\n                userId: \"\",\r\n                title: \"\",\r\n                body: \"\"\r\n              },\r\n            touched: {\r\n                userId: false,\r\n                title : false,\r\n                body: false\r\n              },\r\n        }\r\n        \r\n    }\r\n    componentDidMount = () => this.getPost();\r\n    getPost = async () => {\r\n        try {\r\n            const {\r\n                data\r\n            } = await axios.get(API_URL);\r\n            //console.log(data);\r\n            this.setState({\r\n                posts: data\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    handle = async ({ target: { name, value } }) => {\r\n        const errors = this.state.errors;\r\n        switch (name) {\r\n            case \"userId\": {\r\n              if (!value) {\r\n                errors[name] = \"userId is empty\";\r\n              } else if(isNaN(name)){\r\n                errors[name] = \"userId must be Number\";\r\n              } else {\r\n                errors[name] = \"\";  \r\n              }\r\n              break;\r\n            }\r\n            case \"title\": {\r\n              if (!value) {\r\n                errors[name] = \"title is empty\";\r\n              } else {\r\n                errors[name] = \"\";\r\n              }\r\n              break;\r\n            }\r\n            case \"body\": {\r\n                if (!value) {\r\n                  errors[name] = \"body is empty\";\r\n                } else {\r\n                  errors[name] = \"\";\r\n                }\r\n                break;\r\n              }\r\n          }\r\n          this.setState({ [name]: value, errors });\r\n        //console.log(this.state)\r\n\r\n    }\r\n    handleBlur = ({ target: { name } }) => {\r\n        const touched = { ...this.state.touched };\r\n        touched[name] = true;\r\n        this.setState({ touched });\r\n      };\r\n    submit = async (event) => {\r\n        console.log(event.target);\r\n        event.preventDefault();\r\n        var flag = 0,\r\n            ID,\r\n            index;\r\n        for (var i = 0; i < this.state.posts.length; ++i) {\r\n            if (this.state.posts[i].id == this.myRef1.current.value) {\r\n                flag = 1;\r\n                ID = this.state.posts[i].id;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (flag === 0) {\r\n            const post = {\r\n                userId: this.myRef1.current.value,\r\n                title: this.myRef2.current.value,\r\n                body: this.myRef3.current.value,\r\n            }\r\n\r\n            console.log(\"if\")\r\n            try {\r\n                await axios.post(`${API_URL}`, post);\r\n                let posts = [...this.state.posts, post];\r\n                console.log(\"try\");\r\n                this.setState({\r\n                    posts\r\n                });\r\n\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            console.log(\"else\")\r\n            const post = {\r\n                userId: this.myRef1.current.value,\r\n                title: this.myRef2.current.value,\r\n                body: this.myRef3.current.value,\r\n            }\r\n\r\n            console.log(\"inside update\")\r\n            try {\r\n                await axios.put(`${API_URL}/${ID}`, post);\r\n                //console.log(posts);\r\n                this.state.posts[index].userId = post.userId;\r\n                this.state.posts[index].title = post.title;\r\n                this.state.posts[index].body = post.body;\r\n                const posts = [...this.state.posts];\r\n                this.setState({\r\n                    posts\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    comments = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}/comments`)\r\n        let res = [];\r\n        for (var i = 0; i < data.length; ++i) {\r\n            res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\r\n        }\r\n        alert(res);\r\n\r\n    }\r\n    view = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}`);\r\n        console.log(data);\r\n        alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\r\n    }\r\n    delete = async (postId) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${postId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter(({\r\n                id\r\n            }) => id !== postId);\r\n            this.setState({\r\n                posts\r\n            });\r\n            // console.log(posts);\r\n            // console.log(postId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    update = async (id, title, body) => {\r\n        this.myRef1.current.value = id;\r\n        this.myRef2.current.value = title;\r\n        this.myRef3.current.value = body;\r\n    }\r\n    render() {\r\n        return ( <\r\n            >\r\n            <\r\n            form onSubmit = {\r\n                this.submit\r\n            } >\r\n            <\r\n            label > userId <\r\n            input ref = {\r\n                this.myRef1\r\n            }\r\n            type = \"number\" required\r\n            value = {\r\n                this.state.userId.value\r\n            }\r\n            name = \"userId\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            onBlur={this.handleBlur}\r\n            /> < /\r\n            label > <\r\n            label > Title <\r\n            input ref = {\r\n                this.myRef2\r\n            }\r\n            type = \"text\" required\r\n            value = {\r\n                this.state.title.value\r\n            }\r\n            name = \"title\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            onBlur={this.handleBlur}\r\n            /> < /\r\n            label > <\r\n            label > Body <\r\n            input ref = {\r\n                this.myRef3\r\n            }\r\n            type = \"text\" required\r\n            value = {\r\n                this.state.body.value\r\n            }\r\n            name = \"body\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            onBlur={this.handleBlur}\r\n            /> < /\r\n            label > <\r\n            input type = \"submit\"\r\n            value = \"Submit\" / >\r\n            <\r\n            /form> <\r\n            Table >\r\n            <\r\n            thead >\r\n            <\r\n            th > userId < /th> <\r\n            th > Id < /th> <\r\n            th > Title < /th> <\r\n            th > Body < /th> <\r\n            th > Action < /th> < /\r\n            thead > <\r\n            tbody> {\r\n                this.state.posts.map(({\r\n                    userId,\r\n                    id,\r\n                    title,\r\n                    body\r\n                }) => {\r\n                    return ( <\r\n                        tr key = {\r\n                            id\r\n                        } style={{background:\"#778899\"}}>\r\n                        <\r\n                        td style={{background:\"white\"}}> {\r\n                            userId\r\n                        } < /td> <\r\n                        td > {\r\n                            id\r\n                        } < /td> <\r\n                        td > {\r\n                            title\r\n                        } < /td> <\r\n                        td > {\r\n                            body\r\n                        } < /td> <\r\n                        td > < Button style={{background:\"#ff6347\"}} onClick = {\r\n                            () => this.delete(id)\r\n                        } > Delete < /Button></td >\r\n                        <\r\n                        td > < Button style={{background:\"#7fffd4\"}} onClick = {\r\n                            () => this.view(id)\r\n                        } > View User < /Button></td >\r\n                        <\r\n                        td > < Button style={{background:\"#7fffd4\"}} onClick = {\r\n                            () => this.comments(id)\r\n                        } > View Comments < /Button></td >\r\n                        <\r\n                        td > < Button style={{background:\"#77dd77\"}} onClick = {\r\n                            () => this.update(id, title, body)\r\n                        } > Update < /Button></td >\r\n                        <\r\n                        /tr>\r\n                    );\r\n                })\r\n            } <\r\n            /tbody> \r\n            </ Table > \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo;"]},"metadata":{},"sourceType":"module"}