{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil.parate\\\\Desktop\\\\guvi\\\\react\\\\demosite\\\\src\\\\form.js\";\nimport React, { Component } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nclass demo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => this.getPost();\n\n    this.getPost = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(API_URL); //console.log(data);\n\n        this.setState({\n          posts: data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handle = async event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }); //console.log(this.state)\n    };\n\n    this.submit = async event => {\n      console.log(event.target);\n      event.preventDefault();\n      let flag = 0,\n          ID;\n\n      for (var i = 0; i < this.state.posts.length; ++i) {\n        if (this.state.posts[i].userId == this.state.userId && this.state.posts[i].id) {\n          flag = 1;\n          ID = this.state.posts[i].id;\n          break;\n        }\n      }\n\n      if (flag == 0) {\n        const post = {\n          userId: this.state.userId,\n          title: this.state.title,\n          body: this.state.body\n        };\n        console.log(\"if\");\n\n        try {\n          await axios.post(`${API_URL}`, post);\n          let posts = [...this.state.posts, post];\n          console.log(\"try\");\n          this.setState({\n            posts\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        console.log(\"else\");\n        const post = {\n          userId: this.state.userId,\n          title: this.state.title,\n          body: this.state.body\n        };\n        console.log(\"inside update\");\n\n        try {\n          await axios.put(`${API_URL}/${ID}`, post); //console.log(posts);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.comments = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}/comments`);\n      let res = [];\n\n      for (var i = 0; i < data.length; ++i) {\n        res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\n      }\n\n      alert(res);\n    };\n\n    this.view = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}`);\n      console.log(data);\n      alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\n    };\n\n    this.delete = async postId => {\n      try {\n        await axios.delete(`${API_URL}/${postId}`);\n        let posts = [...this.state.posts];\n        posts = posts.filter(({\n          id\n        }) => id !== postId);\n        this.setState({\n          posts\n        }); // console.log(posts);\n        // console.log(postId)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.update = async (id, title, body) => {\n      this.myRef1.current.value = id;\n      this.myRef2.current.value = title;\n      this.myRef3.current.value = body;\n    };\n\n    this.myRef1 = /*#__PURE__*/React.createRef();\n    this.myRef2 = /*#__PURE__*/React.createRef();\n    this.myRef3 = /*#__PURE__*/React.createRef();\n    this.state = {\n      posts: [],\n      userId: \"\",\n      title: \"\",\n      body: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" userId \", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.myRef1,\n            type: \"number\",\n            value: this.state.userId.value,\n            name: \"userId\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 28\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Title \", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.myRef2,\n            type: \"text\",\n            value: this.state.title.value,\n            name: \"title\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 27\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Body \", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: this.myRef3,\n            type: \"text\",\n            value: this.state.body.value,\n            name: \"body\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 26\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" userId \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Id \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 32\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 28\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Body \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 31\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Action \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", this.state.posts.map(({\n            userId,\n            id,\n            title,\n            body\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", userId, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", body, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.delete(id),\n                  children: \" Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.view(id),\n                  children: \" View User \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.comments(id),\n                  children: \" View Comments \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.update(id, title, body),\n                  children: \" Update \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 25\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 30\n            }, this);\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true);\n  }\n\n}\n\nexport default demo;","map":{"version":3,"sources":["C:/Users/nikhil.parate/Desktop/guvi/react/demosite/src/form.js"],"names":["React","Component","Button","Table","axios","API_URL","demo","constructor","componentDidMount","getPost","data","get","setState","posts","err","console","log","handle","event","target","name","value","submit","preventDefault","flag","ID","i","state","length","userId","id","post","title","body","put","comments","Id","res","push","postId","email","alert","view","delete","filter","update","myRef1","current","myRef2","myRef3","createRef","render","map"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    Button,\r\n    Table\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\nclass demo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.myRef1 = React.createRef();\r\n        this.myRef2 = React.createRef();\r\n        this.myRef3 = React.createRef();\r\n        this.state = {\r\n            posts: [],\r\n            userId: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n        }\r\n    }\r\n    componentDidMount = () => this.getPost();\r\n    getPost = async () => {\r\n        try {\r\n            const {\r\n                data\r\n            } = await axios.get(API_URL);\r\n            //console.log(data);\r\n            this.setState({\r\n                posts: data\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    handle = async (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n        //console.log(this.state)\r\n\r\n    }\r\n    submit = async (event) => {\r\n        console.log(event.target);\r\n        event.preventDefault();\r\n        let flag = 0,\r\n            ID;\r\n        for (var i = 0; i < this.state.posts.length; ++i) {\r\n            if (this.state.posts[i].userId == this.state.userId && this.state.posts[i].id) {\r\n                flag = 1;\r\n                ID = this.state.posts[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (flag == 0) {\r\n            const post = {\r\n                userId: this.state.userId,\r\n                title: this.state.title,\r\n                body: this.state.body,\r\n            }\r\n\r\n            console.log(\"if\")\r\n            try {\r\n                await axios.post(`${API_URL}`, post);\r\n                let posts = [...this.state.posts, post];\r\n                console.log(\"try\");\r\n                this.setState({\r\n                    posts\r\n                });\r\n\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            console.log(\"else\")\r\n            const post = {\r\n                userId: this.state.userId,\r\n                title: this.state.title,\r\n                body: this.state.body,\r\n            }\r\n\r\n            console.log(\"inside update\")\r\n            try {\r\n                await axios.put(`${API_URL}/${ID}`, post);\r\n                //console.log(posts);\r\n\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    comments = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}/comments`)\r\n        let res = [];\r\n        for (var i = 0; i < data.length; ++i) {\r\n            res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\r\n        }\r\n        alert(res);\r\n\r\n    }\r\n    view = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}`);\r\n        console.log(data);\r\n        alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\r\n    }\r\n    delete = async (postId) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${postId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter(({\r\n                id\r\n            }) => id !== postId);\r\n            this.setState({\r\n                posts\r\n            });\r\n            // console.log(posts);\r\n            // console.log(postId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    update = async (id, title, body) => {\r\n        this.myRef1.current.value = id;\r\n        this.myRef2.current.value = title;\r\n        this.myRef3.current.value = body;\r\n    }\r\n    render() {\r\n        return ( <\r\n            >\r\n            <\r\n            form onSubmit = {\r\n                this.submit\r\n            } >\r\n            <\r\n            label > userId <\r\n            input ref = {\r\n                this.myRef1\r\n            }\r\n            type = \"number\"\r\n            value = {\r\n                this.state.userId.value\r\n            }\r\n            name = \"userId\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> < /\r\n            label > <\r\n            label > Title <\r\n            input ref = {\r\n                this.myRef2\r\n            }\r\n            type = \"text\"\r\n            value = {\r\n                this.state.title.value\r\n            }\r\n            name = \"title\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> < /\r\n            label > <\r\n            label > Body <\r\n            input ref = {\r\n                this.myRef3\r\n            }\r\n            type = \"text\"\r\n            value = {\r\n                this.state.body.value\r\n            }\r\n            name = \"body\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> < /\r\n            label > <\r\n            input type = \"submit\"\r\n            value = \"Submit\" / >\r\n            <\r\n            /form> <\r\n            Table >\r\n            <\r\n            thead >\r\n            <\r\n            th > userId < /th> <\r\n            th > Id < /th> <\r\n            th > Title < /th> <\r\n            th > Body < /th> <\r\n            th > Action < /th> < /\r\n            thead > <\r\n            tbody > {\r\n                this.state.posts.map(({\r\n                    userId,\r\n                    id,\r\n                    title,\r\n                    body\r\n                }) => {\r\n                    return ( <\r\n                        tr key = {\r\n                            id\r\n                        } >\r\n                        <\r\n                        td > {\r\n                            userId\r\n                        } < /td> <\r\n                        td > {\r\n                            id\r\n                        } < /td> <\r\n                        td > {\r\n                            title\r\n                        } < /td> <\r\n                        td > {\r\n                            body\r\n                        } < /td> <\r\n                        td > < Button onClick = {\r\n                            () => this.delete(id)\r\n                        } > Delete < /Button></td >\r\n                        <\r\n                        td > < Button onClick = {\r\n                            () => this.view(id)\r\n                        } > View User < /Button></td >\r\n                        <\r\n                        td > < Button onClick = {\r\n                            () => this.comments(id)\r\n                        } > View Comments < /Button></td >\r\n                        <\r\n                        td > < Button onClick = {\r\n                            () => this.update(id, title, body)\r\n                        } > Update < /Button></td >\r\n                        <\r\n                        /tr>    \r\n                    );\r\n                })\r\n            } <\r\n            /tbody> < /\r\n            Table > <\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default demo;"]},"metadata":{},"sourceType":"module"}