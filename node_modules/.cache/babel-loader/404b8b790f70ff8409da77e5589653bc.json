{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil.parate\\\\Desktop\\\\guvi\\\\react\\\\demosite\\\\src\\\\form.js\";\nimport React, { Component } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nclass demo extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => this.getPost();\n\n    this.getPost = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(API_URL); //console.log(data);\n\n        this.setState({\n          posts: data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handle = async event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }); //console.log(this.state)\n    };\n\n    this.update = async event => {\n      //console.log(this.state.userId);\n      event.preventDefault();\n      const post = {\n        userId: this.state.userId,\n        title: this.state.title,\n        body: this.state.body\n      };\n      console.log(\"inside update\");\n      console.log(post);\n\n      try {\n        await axios.post(`${API_URL}`, post);\n        let posts = [...this.state.posts, post]; //console.log(posts);\n\n        this.setState({\n          posts\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.comments = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}/comments`);\n      let res = [];\n\n      for (var i = 0; i < data.length; ++i) {\n        res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\n      }\n\n      alert(res);\n    };\n\n    this.view = async Id => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${Id}`);\n      console.log(data);\n      alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\n    };\n\n    this.delete = async postId => {\n      try {\n        await axios.delete(`${API_URL}/${postId}`);\n        let posts = [...this.state.posts];\n        posts = posts.filter(({\n          id\n        }) => id !== postId);\n        this.setState({\n          posts\n        }); // console.log(posts);\n        // console.log(postId)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      posts: [],\n      userId: \"\",\n      title: \"\",\n      body: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.update,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" userId \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: this.state.userId.value,\n            name: \"userId\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 28\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Title \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.title.value,\n            name: \"title\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 27\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Body \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.body.value,\n            name: \"body\",\n            onChange: this.handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 26\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" userId \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Id \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 32\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 28\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Body \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 31\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Action \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", this.state.posts.map(({\n            userId,\n            id,\n            title,\n            body\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", userId, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", body, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 34\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.delete(id),\n                  children: \" Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.view(id),\n                  children: \" View User \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.comments(id),\n                  children: \" View Comments \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 25\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 30\n            }, this);\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true);\n  }\n\n}\n\nexport default demo;","map":{"version":3,"sources":["C:/Users/nikhil.parate/Desktop/guvi/react/demosite/src/form.js"],"names":["React","Component","Button","Table","axios","API_URL","demo","constructor","componentDidMount","getPost","data","get","setState","posts","err","console","log","handle","event","target","name","value","update","preventDefault","post","userId","state","title","body","comments","Id","res","i","length","push","postId","id","email","alert","view","delete","filter","render","map"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport {Button, Table} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\nclass demo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            posts: [],\r\n            userId: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n        }\r\n    }\r\n    componentDidMount = () => this.getPost();\r\n    getPost = async () => {\r\n        try {\r\n            const {\r\n                data\r\n            } = await axios.get(API_URL);\r\n            //console.log(data);\r\n            this.setState({\r\n                posts: data\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    handle = async (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n        //console.log(this.state)\r\n\r\n    }\r\n    update = async (event) => {\r\n        //console.log(this.state.userId);\r\n        event.preventDefault();\r\n        const post = {\r\n            userId: this.state.userId,\r\n            title: this.state.title,\r\n            body: this.state.body,\r\n        }\r\n\r\n        console.log(\"inside update\")\r\n        console.log(post)\r\n        try {\r\n            await axios.post(`${API_URL}`, post);\r\n            let posts = [...this.state.posts, post];\r\n            //console.log(posts);\r\n            this.setState({\r\n                posts\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    comments = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}/comments`)\r\n        let res = [];\r\n        for (var i = 0; i < data.length; ++i) {\r\n            res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\r\n        }\r\n        alert(res);\r\n\r\n    }\r\n    view = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}`);\r\n        console.log(data);\r\n        alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\r\n    }\r\n    delete = async (postId) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${postId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter(({\r\n                id\r\n            }) => id !== postId);\r\n            this.setState({\r\n                posts\r\n            });\r\n            // console.log(posts);\r\n            // console.log(postId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    render() {\r\n        return ( <\r\n            >\r\n            <\r\n            form onSubmit = {\r\n                this.update\r\n            } >\r\n            <\r\n            label > userId <\r\n            input type = \"number\"\r\n            value = {\r\n                this.state.userId.value\r\n            }\r\n            name = \"userId\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> <\r\n            /label> <\r\n            label > Title <\r\n            input type = \"text\"\r\n            value = {\r\n                this.state.title.value\r\n            }\r\n            name = \"title\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> <\r\n            /label> <\r\n            label > Body <\r\n            input type = \"text\"\r\n            value = {\r\n                this.state.body.value\r\n            }\r\n            name = \"body\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> <\r\n            /label> <\r\n            input type = \"submit\"\r\n            value = \"Submit\" / >\r\n            <\r\n            /form> <\r\n            Table >\r\n            <\r\n            thead >\r\n            <\r\n            th > userId < /th> <\r\n            th > Id < /th> <\r\n            th > Title < /th> <\r\n            th > Body < /th> <\r\n            th > Action < /th> <\r\n            /thead> <\r\n            tbody > {\r\n                this.state.posts.map(({\r\n                    userId,\r\n                    id,\r\n                    title,\r\n                    body\r\n                }) => {\r\n                    return ( <\r\n                        tr key = {\r\n                            id\r\n                        } >\r\n                        <\r\n                        td > {\r\n                            userId\r\n                        } < /td> <\r\n                        td > {\r\n                            id\r\n                        } < /td> <\r\n                        td > {\r\n                            title\r\n                        } < /td> <\r\n                        td > {\r\n                            body\r\n                        } < /td> <\r\n                        td > < button onClick = {\r\n                            () => this.delete(id)\r\n                        } > Delete < /button></td >\r\n                        <\r\n                        td > < button onClick = {\r\n                            () => this.view(id)\r\n                        } > View User < /button></td >\r\n                        <\r\n                        td > < button onClick = {\r\n                            () => this.comments(id)\r\n                        } > View Comments < /button></td >\r\n                        <\r\n                        /tr>    \r\n                    );\r\n                })\r\n            } <\r\n            /tbody> <\r\n            /Table> <\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default demo;"]},"metadata":{},"sourceType":"module"}