{"version":3,"sources":["form.js","About.js","Home.js","posts.js","history.js","context.js","Counter.js","App.js","index.js"],"names":["API_URL","demo","componentDidMount","getPost","a","axios","get","data","setState","posts","console","log","handle","target","name","value","errors","state","isNaN","handleBlur","touched","submit","event","preventDefault","flag","i","length","id","myRef1","current","ID","index","post","userId","title","myRef2","body","myRef3","put","comments","Id","res","push","postId","email","alert","view","delete","filter","update","React","createRef","onSubmit","this","ref","type","required","onChange","onBlur","Table","map","style","background","fontWeight","color","Button","onClick","Component","About","Home","textAlign","fontSize","History","history","useHistory","goBack","goForward","ContextStr","createContext","str","count","props","description","age","App","Consumer","context","paddingRight","to","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7ca6d2b9.chunk.js","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\nclass demo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.myRef1 = React.createRef();\r\n        this.myRef2 = React.createRef();\r\n        this.myRef3 = React.createRef();\r\n        this.state = {\r\n            posts: [],\r\n            userId: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n            errors: {\r\n                userId: \"\",\r\n                title: \"\",\r\n                body: \"\"\r\n              },\r\n            touched: {\r\n                userId: false,\r\n                title : false,\r\n                body: false\r\n              },\r\n        }\r\n        \r\n    }\r\n    componentDidMount = () => this.getPost();\r\n    getPost = async () => {\r\n        try {\r\n            const {\r\n                data\r\n            } = await axios.get(API_URL);\r\n            //console.log(data);\r\n            this.setState({\r\n                posts: data\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    handle = async ({ target: { name, value } }) => {\r\n        const errors = this.state.errors;\r\n        switch (name) {\r\n            case \"userId\": {\r\n              if (!value) {\r\n                errors[name] = \"userId is empty\";\r\n              } else if(isNaN(name)){\r\n                errors[name] = \"userId must be Number\";\r\n              } else {\r\n                errors[name] = \"\";  \r\n              }\r\n              break;\r\n            }\r\n            case \"title\": {\r\n              if (!value) {\r\n                errors[name] = \"title is empty\";\r\n              } else {\r\n                errors[name] = \"\";\r\n              }\r\n              break;\r\n            }\r\n            case \"body\": {\r\n                if (!value) {\r\n                  errors[name] = \"body is empty\";\r\n                } else {\r\n                  errors[name] = \"\";\r\n                }\r\n                break;\r\n              }\r\n          }\r\n          this.setState({ [name]: value, errors });\r\n        //console.log(this.state)\r\n\r\n    }\r\n    handleBlur = ({ target: { name } }) => {\r\n        const touched = { ...this.state.touched };\r\n        touched[name] = true;\r\n        this.setState({ touched });\r\n      };\r\n    submit = async (event) => {\r\n        console.log(event.target);\r\n        event.preventDefault();\r\n        var flag = 0,\r\n            ID,\r\n            index;\r\n        for (var i = 0; i < this.state.posts.length; ++i) {\r\n            if (this.state.posts[i].id == this.myRef1.current.value) {\r\n                flag = 1;\r\n                ID = this.state.posts[i].id;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (flag === 0) {\r\n            const post = {\r\n                userId: this.myRef1.current.value,\r\n                title: this.myRef2.current.value,\r\n                body: this.myRef3.current.value,\r\n            }\r\n\r\n            console.log(\"if\")\r\n            try {\r\n                await axios.post(`${API_URL}`, post);\r\n                let posts = [...this.state.posts, post];\r\n                console.log(\"try\");\r\n                this.setState({\r\n                    posts\r\n                });\r\n\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            console.log(\"else\")\r\n            const post = {\r\n                userId: this.myRef1.current.value,\r\n                title: this.myRef2.current.value,\r\n                body: this.myRef3.current.value,\r\n            }\r\n\r\n            console.log(\"inside update\")\r\n            try {\r\n                await axios.put(`${API_URL}/${ID}`, post);\r\n                //console.log(posts);\r\n                this.state.posts[index].userId = post.userId;\r\n                this.state.posts[index].title = post.title;\r\n                this.state.posts[index].body = post.body;\r\n                const posts = [...this.state.posts];\r\n                this.setState({\r\n                    posts\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    comments = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}/comments`)\r\n        let res = [];\r\n        for (var i = 0; i < data.length; ++i) {\r\n            res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\r\n        }\r\n        alert(res);\r\n\r\n    }\r\n    view = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}`);\r\n        console.log(data);\r\n        alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\r\n    }\r\n    delete = async (postId) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${postId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter(({\r\n                id\r\n            }) => id !== postId);\r\n            this.setState({\r\n                posts\r\n            });\r\n            // console.log(posts);\r\n            // console.log(postId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    update = async (id, title, body) => {\r\n        this.myRef1.current.value = id;\r\n        this.myRef2.current.value = title;\r\n        this.myRef3.current.value = body;\r\n    }\r\n    render() {\r\n        return ( <\r\n            >\r\n            <\r\n            form onSubmit = {\r\n                this.submit\r\n            } >\r\n            <\r\n            label > userId <\r\n            input ref = {\r\n                this.myRef1\r\n            }\r\n            type = \"number\" required\r\n            value = {\r\n                this.state.userId.value\r\n            }\r\n            name = \"userId\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            onBlur={this.handleBlur}\r\n            /> < /\r\n            label > <\r\n            label > Title <\r\n            input ref = {\r\n                this.myRef2\r\n            }\r\n            type = \"text\" required\r\n            value = {\r\n                this.state.title.value\r\n            }\r\n            name = \"title\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            onBlur={this.handleBlur}\r\n            /> < /\r\n            label > <\r\n            label > Body <\r\n            input ref = {\r\n                this.myRef3\r\n            }\r\n            type = \"text\" required\r\n            value = {\r\n                this.state.body.value\r\n            }\r\n            name = \"body\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            onBlur={this.handleBlur}\r\n            /> < /\r\n            label > <\r\n            input type = \"submit\"\r\n            value = \"Submit\" / >\r\n            <\r\n            /form> <\r\n            Table >\r\n            <\r\n            thead >\r\n            <\r\n            th > userId < /th> <\r\n            th > Id < /th> <\r\n            th > Title < /th> <\r\n            th > Body < /th> <\r\n            th > Action < /th> < /\r\n            thead > <\r\n            tbody> {\r\n                this.state.posts.map(({\r\n                    userId,\r\n                    id,\r\n                    title,\r\n                    body\r\n                }) => {\r\n                    return ( <\r\n                        tr key = {\r\n                            id\r\n                        } style={{background:\"#EFC9AF\"}}>\r\n                        <\r\n                        td style={{fontWeight:\"bold\", color:\"#104c91\"}}> {\r\n                            userId\r\n                        } < /td> <\r\n                        td style={{fontWeight:\"bold\", color:\"#104c91\"}}> {\r\n                            id\r\n                        } < /td> <\r\n                        td style={{fontWeight:\"bold\", color:\"#104c91\"}}> {\r\n                            title\r\n                        } < /td> <\r\n                        td style={{fontWeight:\"bold\", color:\"#104c91\"}}> {\r\n                            body\r\n                        } < /td> <\r\n                        td > < Button style={{background:\"#ff6347\"}} onClick = {\r\n                            () => this.delete(id)\r\n                        } > Delete < /Button></td >\r\n                        <\r\n                        td > < Button style={{background:\"#7fffd4\"}} onClick = {\r\n                            () => this.view(id)\r\n                        } > View User < /Button></td >\r\n                        <\r\n                        td > < Button style={{background:\"#7fffd4\"}} onClick = {\r\n                            () => this.comments(id)\r\n                        } > View Comments < /Button></td >\r\n                        <\r\n                        td > < Button style={{background:\"#77dd77\"}} onClick = {\r\n                            () => this.update(id, title, body)\r\n                        } > Update < /Button></td >\r\n                        <\r\n                        /tr>\r\n                    );\r\n                })\r\n            } <\r\n            /tbody> \r\n            </ Table > \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo;","function About() {\r\n    return (\r\n        <>\r\n    <h1 style={{color:\"grey\"}}>This website is to display User details</h1>\r\n    <h3>Simple CRUD APP with fake REST API</h3>\r\n    <span style={{color:\"brown\"}}><p>Posts will redirect to all available posts</p>\r\n    <p>Enter New Id to add new data and existing ID to update data</p>\r\n    <h2> Form is with validation. It has also an example of context, life cycle component, browseRouter, useHistory.</h2></span>\r\n    </>)\r\n}\r\nexport default About;","function Home() {\r\n    return  <h1 style={{color:\"brown\"}}>Home page of Demo CRUD app</h1>\r\n}\r\nexport default Home;","function posts() {\r\n    return <p style={{color:\"white\", textAlign:\"center\", background:\"#40404F\", fontSize: \"30px\"}}>This page publish all post details.</p>\r\n}\r\nexport default posts;","import {useHistory} from 'react-router-dom';\r\nfunction History() {\r\n  const history = useHistory();\r\n  console.log(useHistory(),\"here\");\r\n    return <>\r\n    <button style={{background:\"#C0C0C0\"}} onClick={history.goBack}>Backward</button>\r\n    <button style={{background:\"#C0C0C0\"}} onClick={history.goForward}>Forward</button>\r\n    </>\r\n}\r\nexport default History;","import { createContext } from \"react\";\r\n\r\nexport const ContextStr = createContext({str : \"Hello, Welcome to public posts.\"});","import React from 'react';\r\nimport  propTypes  from 'prop-types';\r\nclass count extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return(\r\n            <>\r\n              <h3>{this.props.description}</h3>\r\n              <p>name: {this.props.name}</p>\r\n              <p>age: {this.props.age}</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\ncount.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  age: propTypes.number.isRequired,\r\n}\r\nexport default count;","import Form from './form';\nimport React  from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport About  from './About';\nimport Home from './Home';\nimport Post from './posts';\nimport History from './history';\nimport {ContextStr} from './context';\nimport Prop from './Counter';\n\nfunction App(props) {\n  \n  return (\n    <> \n    <ContextStr.Consumer>\n    {\n      (context)=> {\n        return(\n          <>\n          <p style={{color:\"white\", textAlign:\"center\", background:\"#40404F\", fontSize: \"50px\"}}>{context.str}</p>\n          </>\n        )\n      }\n    }\n    </ContextStr.Consumer>\n    <BrowserRouter >\n    {/* <a href=\"/\">Home</a>\n    <a href=\"/about\">About</a> */}\n      <History /> <br />\n     <Link style={{fontSize:\"20px\", paddingRight:\"2px\"}} to=\"/\">Home</Link>\n     <Link style={{fontSize:\"20px\", paddingRight:\"2px\"}} to=\"/about\">About</Link>\n     <Link style={{fontSize:\"20px\", paddingRight:\"2px\"}} to=\"/posts\">Posts</Link>\n     <Link  style={{fontSize:\"20px\", paddingRight:\"2px\"}}to=\"/props\">Props</Link>\n    <Switch>\n    <Route  path=\"/about\" >\n    <About /> \n    </Route>\n    <Route exact path=\"/\" render={()=><Home />}/>\n    <Route path=\"/posts\">\n      <Post />\n      <Form />\n    </Route>\n    <Route path=\"/props\">\n      <Prop name=\"nikhil\" age=\"25\" description=\"This is an example to present props working\"/>\n    </Route>\n    </Switch>\n    </BrowserRouter>\n    \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}