{"version":3,"sources":["form.js","About.js","Home.js","posts.js","history.js","context.js","Counter.js","App.js","index.js"],"names":["API_URL","demo","componentDidMount","getPost","a","axios","get","data","setState","posts","console","log","handle","event","target","name","value","submit","preventDefault","flag","i","state","length","id","myRef1","current","ID","index","post","userId","title","myRef2","body","myRef3","put","comments","Id","res","push","postId","email","alert","view","delete","filter","update","React","createRef","onSubmit","this","ref","type","onChange","Table","map","Button","onClick","Component","About","Home","History","history","useHistory","goBack","goForward","ContextStr","createContext","str","count","props","age","App","Consumer","context","to","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9c98c210.chunk.js","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    Button,\r\n    Table\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\nclass demo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.myRef1 = React.createRef();\r\n        this.myRef2 = React.createRef();\r\n        this.myRef3 = React.createRef();\r\n        this.state = {\r\n            posts: [],\r\n            userId: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n        }\r\n    }\r\n    componentDidMount = () => this.getPost();\r\n    getPost = async () => {\r\n        try {\r\n            const {\r\n                data\r\n            } = await axios.get(API_URL);\r\n            //console.log(data);\r\n            this.setState({\r\n                posts: data\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    handle = async (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n        //console.log(this.state)\r\n\r\n    }\r\n    submit = async (event) => {\r\n        console.log(event.target);\r\n        event.preventDefault();\r\n        var flag = 0,\r\n            ID,\r\n            index;\r\n        for (var i = 0; i < this.state.posts.length; ++i) {\r\n            if (this.state.posts[i].id == this.myRef1.current.value) {\r\n                flag = 1;\r\n                ID = this.state.posts[i].id;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (flag === 0) {\r\n            const post = {\r\n                userId: this.myRef1.current.value,\r\n                title: this.myRef2.current.value,\r\n                body: this.myRef3.current.value,\r\n            }\r\n\r\n            console.log(\"if\")\r\n            try {\r\n                await axios.post(`${API_URL}`, post);\r\n                let posts = [...this.state.posts, post];\r\n                console.log(\"try\");\r\n                this.setState({\r\n                    posts\r\n                });\r\n\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            console.log(\"else\")\r\n            const post = {\r\n                userId: this.myRef1.current.value,\r\n                title: this.myRef2.current.value,\r\n                body: this.myRef3.current.value,\r\n            }\r\n\r\n            console.log(\"inside update\")\r\n            try {\r\n                await axios.put(`${API_URL}/${ID}`, post);\r\n                //console.log(posts);\r\n                this.state.posts[index].userId = post.userId;\r\n                this.state.posts[index].title = post.title;\r\n                this.state.posts[index].body = post.body;\r\n                const posts = [...this.state.posts];\r\n                this.setState({\r\n                    posts\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    comments = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}/comments`)\r\n        let res = [];\r\n        for (var i = 0; i < data.length; ++i) {\r\n            res.push(data[i].postId, data[i].id, data[i].name, data[i].email, data[i].body);\r\n        }\r\n        alert(res);\r\n\r\n    }\r\n    view = async (Id) => {\r\n        const {\r\n            data\r\n        } = await axios.get(`${API_URL}/${Id}`);\r\n        console.log(data);\r\n        alert(\"userId:  \" + data.id + \"   \" + \"Title:  \" + data.title + \"   \" + \"Body:  \" + data.body);\r\n    }\r\n    delete = async (postId) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${postId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter(({\r\n                id\r\n            }) => id !== postId);\r\n            this.setState({\r\n                posts\r\n            });\r\n            // console.log(posts);\r\n            // console.log(postId)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    update = async (id, title, body) => {\r\n        this.myRef1.current.value = id;\r\n        this.myRef2.current.value = title;\r\n        this.myRef3.current.value = body;\r\n    }\r\n    render() {\r\n        return ( <\r\n            >\r\n            <\r\n            form onSubmit = {\r\n                this.submit\r\n            } >\r\n            <\r\n            label > userId <\r\n            input ref = {\r\n                this.myRef1\r\n            }\r\n            type = \"number\"\r\n            value = {\r\n                this.state.userId.value\r\n            }\r\n            name = \"userId\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> < /\r\n            label > <\r\n            label > Title <\r\n            input ref = {\r\n                this.myRef2\r\n            }\r\n            type = \"text\"\r\n            value = {\r\n                this.state.title.value\r\n            }\r\n            name = \"title\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> < /\r\n            label > <\r\n            label > Body <\r\n            input ref = {\r\n                this.myRef3\r\n            }\r\n            type = \"text\"\r\n            value = {\r\n                this.state.body.value\r\n            }\r\n            name = \"body\"\r\n            onChange = {\r\n                this.handle\r\n            }\r\n            /> < /\r\n            label > <\r\n            input type = \"submit\"\r\n            value = \"Submit\" / >\r\n            <\r\n            /form> <\r\n            Table >\r\n            <\r\n            thead >\r\n            <\r\n            th > userId < /th> <\r\n            th > Id < /th> <\r\n            th > Title < /th> <\r\n            th > Body < /th> <\r\n            th > Action < /th> < /\r\n            thead > <\r\n            tbody > {\r\n                this.state.posts.map(({\r\n                    userId,\r\n                    id,\r\n                    title,\r\n                    body\r\n                }) => {\r\n                    return ( <\r\n                        tr key = {\r\n                            id\r\n                        } >\r\n                        <\r\n                        td > {\r\n                            userId\r\n                        } < /td> <\r\n                        td > {\r\n                            id\r\n                        } < /td> <\r\n                        td > {\r\n                            title\r\n                        } < /td> <\r\n                        td > {\r\n                            body\r\n                        } < /td> <\r\n                        td > < Button onClick = {\r\n                            () => this.delete(id)\r\n                        } > Delete < /Button></td >\r\n                        <\r\n                        td > < Button onClick = {\r\n                            () => this.view(id)\r\n                        } > View User < /Button></td >\r\n                        <\r\n                        td > < Button onClick = {\r\n                            () => this.comments(id)\r\n                        } > View Comments < /Button></td >\r\n                        <\r\n                        td > < Button onClick = {\r\n                            () => this.update(id, title, body)\r\n                        } > Update < /Button></td >\r\n                        <\r\n                        /tr>\r\n                    );\r\n                })\r\n            } <\r\n            /tbody> < /\r\n            Table > <\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo;","function About() {\r\n    return (\r\n        <>\r\n    <h1>This website is to display User details</h1>\r\n    <h3>Simple CRUD APP</h3>\r\n    <p>Posts will redirect to all available posts</p>\r\n    <p>Enter New Id to add new data and existing ID to update data</p>\r\n    </>)\r\n}\r\nexport default About;","function Home() {\r\n    return  <h1>Home page</h1>\r\n}\r\nexport default Home;","function posts() {\r\n    return <p>This page publish all post details.</p>\r\n}\r\nexport default posts;","import {useHistory} from 'react-router-dom';\r\nfunction History() {\r\n  const history = useHistory();\r\n  console.log(useHistory(),\"here\");\r\n    return <>\r\n    <button onClick={history.goBack}>Backward</button>\r\n    <button onClick={history.goForward}>Forward</button>\r\n    </>\r\n}\r\nexport default History;","import { createContext } from \"react\";\r\n\r\nexport const ContextStr = createContext({str : \"Hello, Welcome to public posts\"});","import React from 'react';\r\nimport  propTypes  from 'prop-types';\r\nclass count extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return(\r\n            <>\r\n              <p>name: {this.props.name}</p>\r\n              <p>age: {this.props.age}</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\ncount.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  age: propTypes.number.isRequired,\r\n}\r\nexport default count;","import Form from './form';\nimport React  from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport About  from './About';\nimport Home from './Home';\nimport Post from './posts';\nimport History from './history';\nimport {ContextStr} from './context';\nimport Prop from './Counter';\n\nfunction App(props) {\n  \n  return (\n    <> \n    <ContextStr.Consumer>\n    {\n      (context)=> {\n        return(\n          <>\n          <p>{context.str}</p>\n          </>\n        )\n      }\n    }\n    </ContextStr.Consumer>\n    <BrowserRouter>\n    {/* <a href=\"/\">Home</a>\n    <a href=\"/about\">About</a> */}\n      <History /> <br />\n     <Link to=\"/\">Home</Link>\n     <Link to=\"/about\">About</Link>\n     <Link to=\"/posts\">Posts</Link>\n     <Link to=\"/props\">Prop</Link>\n    <Switch>\n    <Route  path=\"/about\" >\n    <About /> \n    </Route>\n    <Route exact path=\"/\" render={()=><Home />}/>\n    <Route path=\"/posts\">\n      <Post />\n      <Form />\n    </Route>\n    <Route path=\"/props\">\n      <Prop name=\"nikhil\" age=\"25\" />\n    </Route>\n    <Route path=\"*\">\n      404 Page\n    </Route>\n    </Switch>\n    </BrowserRouter>\n    \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}